#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LearnByPractice.DAL.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="LearnByPractice")]
	public partial class LearnByPracticeDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertKorisnik(Korisnik instance);
    partial void UpdateKorisnik(Korisnik instance);
    partial void DeleteKorisnik(Korisnik instance);
    partial void InsertVid_Organizacija(Vid_Organizacija instance);
    partial void UpdateVid_Organizacija(Vid_Organizacija instance);
    partial void DeleteVid_Organizacija(Vid_Organizacija instance);
    partial void InsertOblast(Oblast instance);
    partial void UpdateOblast(Oblast instance);
    partial void DeleteOblast(Oblast instance);
    partial void InsertOcenka(Ocenka instance);
    partial void UpdateOcenka(Ocenka instance);
    partial void DeleteOcenka(Ocenka instance);
    partial void InsertOrganizacija(Organizacija instance);
    partial void UpdateOrganizacija(Organizacija instance);
    partial void DeleteOrganizacija(Organizacija instance);
    partial void InsertPredmet(Predmet instance);
    partial void UpdatePredmet(Predmet instance);
    partial void DeletePredmet(Predmet instance);
    partial void InsertPrijava(Prijava instance);
    partial void UpdatePrijava(Prijava instance);
    partial void DeletePrijava(Prijava instance);
    partial void InsertPrijava_Korisnik(Prijava_Korisnik instance);
    partial void UpdatePrijava_Korisnik(Prijava_Korisnik instance);
    partial void DeletePrijava_Korisnik(Prijava_Korisnik instance);
    partial void InsertPrijava_Tehnologija(Prijava_Tehnologija instance);
    partial void UpdatePrijava_Tehnologija(Prijava_Tehnologija instance);
    partial void DeletePrijava_Tehnologija(Prijava_Tehnologija instance);
    partial void InsertStudiska_Programa(Studiska_Programa instance);
    partial void UpdateStudiska_Programa(Studiska_Programa instance);
    partial void DeleteStudiska_Programa(Studiska_Programa instance);
    partial void InsertTehnologija(Tehnologija instance);
    partial void UpdateTehnologija(Tehnologija instance);
    partial void DeleteTehnologija(Tehnologija instance);
    #endregion
		
		public LearnByPracticeDataContext() : 
				base(global::LearnByPractice.DAL.Models.Properties.Settings.Default.LearnByPracticeConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LearnByPracticeDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LearnByPracticeDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LearnByPracticeDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LearnByPracticeDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Korisnik> Korisniks
		{
			get
			{
				return this.GetTable<Korisnik>();
			}
		}
		
		public System.Data.Linq.Table<Vid_Organizacija> Vid_Organizacijas
		{
			get
			{
				return this.GetTable<Vid_Organizacija>();
			}
		}
		
		public System.Data.Linq.Table<Oblast> Oblasts
		{
			get
			{
				return this.GetTable<Oblast>();
			}
		}
		
		public System.Data.Linq.Table<Ocenka> Ocenkas
		{
			get
			{
				return this.GetTable<Ocenka>();
			}
		}
		
		public System.Data.Linq.Table<Organizacija> Organizacijas
		{
			get
			{
				return this.GetTable<Organizacija>();
			}
		}
		
		public System.Data.Linq.Table<Predmet> Predmets
		{
			get
			{
				return this.GetTable<Predmet>();
			}
		}
		
		public System.Data.Linq.Table<Prijava> Prijavas
		{
			get
			{
				return this.GetTable<Prijava>();
			}
		}
		
		public System.Data.Linq.Table<Prijava_Korisnik> Prijava_Korisniks
		{
			get
			{
				return this.GetTable<Prijava_Korisnik>();
			}
		}
		
		public System.Data.Linq.Table<Prijava_Tehnologija> Prijava_Tehnologijas
		{
			get
			{
				return this.GetTable<Prijava_Tehnologija>();
			}
		}
		
		public System.Data.Linq.Table<Studiska_Programa> Studiska_Programas
		{
			get
			{
				return this.GetTable<Studiska_Programa>();
			}
		}
		
		public System.Data.Linq.Table<Tehnologija> Tehnologijas
		{
			get
			{
				return this.GetTable<Tehnologija>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Korisnik")]
	public partial class Korisnik : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Korisnichko_Ime;
		
		private System.Data.Linq.Binary _Lozinka;
		
		private string _Ime;
		
		private string _Prezime;
		
		private char _Pol;
		
		private System.Nullable<int> _Studiska_Programa_ID;
		
		private int _Organizacija_ID;
		
		private string _Email;
		
		private string _Telefonski_Broj;
		
		private bool _Administrator;
		
		private bool _Student;
		
		private bool _Mentor;
		
		private EntitySet<Ocenka> _Ocenkas;
		
		private EntitySet<Prijava_Korisnik> _Prijava_Korisniks;
		
		private EntityRef<Organizacija> _Organizacija;
		
		private EntityRef<Studiska_Programa> _Studiska_Programa;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnKorisnichko_ImeChanging(string value);
    partial void OnKorisnichko_ImeChanged();
    partial void OnLozinkaChanging(System.Data.Linq.Binary value);
    partial void OnLozinkaChanged();
    partial void OnImeChanging(string value);
    partial void OnImeChanged();
    partial void OnPrezimeChanging(string value);
    partial void OnPrezimeChanged();
    partial void OnPolChanging(char value);
    partial void OnPolChanged();
    partial void OnStudiska_Programa_IDChanging(System.Nullable<int> value);
    partial void OnStudiska_Programa_IDChanged();
    partial void OnOrganizacija_IDChanging(int value);
    partial void OnOrganizacija_IDChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnTelefonski_BrojChanging(string value);
    partial void OnTelefonski_BrojChanged();
    partial void OnAdministratorChanging(bool value);
    partial void OnAdministratorChanged();
    partial void OnStudentChanging(bool value);
    partial void OnStudentChanged();
    partial void OnMentorChanging(bool value);
    partial void OnMentorChanged();
    #endregion
		
		public Korisnik()
		{
			this._Ocenkas = new EntitySet<Ocenka>(new Action<Ocenka>(this.attach_Ocenkas), new Action<Ocenka>(this.detach_Ocenkas));
			this._Prijava_Korisniks = new EntitySet<Prijava_Korisnik>(new Action<Prijava_Korisnik>(this.attach_Prijava_Korisniks), new Action<Prijava_Korisnik>(this.detach_Prijava_Korisniks));
			this._Organizacija = default(EntityRef<Organizacija>);
			this._Studiska_Programa = default(EntityRef<Studiska_Programa>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Korisnichko_Ime", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Korisnichko_Ime
		{
			get
			{
				return this._Korisnichko_Ime;
			}
			set
			{
				if ((this._Korisnichko_Ime != value))
				{
					this.OnKorisnichko_ImeChanging(value);
					this.SendPropertyChanging();
					this._Korisnichko_Ime = value;
					this.SendPropertyChanged("Korisnichko_Ime");
					this.OnKorisnichko_ImeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lozinka", DbType="VarBinary(255) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Lozinka
		{
			get
			{
				return this._Lozinka;
			}
			set
			{
				if ((this._Lozinka != value))
				{
					this.OnLozinkaChanging(value);
					this.SendPropertyChanging();
					this._Lozinka = value;
					this.SendPropertyChanged("Lozinka");
					this.OnLozinkaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ime", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Ime
		{
			get
			{
				return this._Ime;
			}
			set
			{
				if ((this._Ime != value))
				{
					this.OnImeChanging(value);
					this.SendPropertyChanging();
					this._Ime = value;
					this.SendPropertyChanged("Ime");
					this.OnImeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prezime", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string Prezime
		{
			get
			{
				return this._Prezime;
			}
			set
			{
				if ((this._Prezime != value))
				{
					this.OnPrezimeChanging(value);
					this.SendPropertyChanging();
					this._Prezime = value;
					this.SendPropertyChanged("Prezime");
					this.OnPrezimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pol", DbType="NChar(1) NOT NULL")]
		public char Pol
		{
			get
			{
				return this._Pol;
			}
			set
			{
				if ((this._Pol != value))
				{
					this.OnPolChanging(value);
					this.SendPropertyChanging();
					this._Pol = value;
					this.SendPropertyChanged("Pol");
					this.OnPolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Studiska_Programa_ID", DbType="Int")]
		public System.Nullable<int> Studiska_Programa_ID
		{
			get
			{
				return this._Studiska_Programa_ID;
			}
			set
			{
				if ((this._Studiska_Programa_ID != value))
				{
					if (this._Studiska_Programa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudiska_Programa_IDChanging(value);
					this.SendPropertyChanging();
					this._Studiska_Programa_ID = value;
					this.SendPropertyChanged("Studiska_Programa_ID");
					this.OnStudiska_Programa_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Organizacija_ID", DbType="Int NOT NULL")]
		public int Organizacija_ID
		{
			get
			{
				return this._Organizacija_ID;
			}
			set
			{
				if ((this._Organizacija_ID != value))
				{
					if (this._Organizacija.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrganizacija_IDChanging(value);
					this.SendPropertyChanging();
					this._Organizacija_ID = value;
					this.SendPropertyChanged("Organizacija_ID");
					this.OnOrganizacija_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefonski_Broj", DbType="NVarChar(16)")]
		public string Telefonski_Broj
		{
			get
			{
				return this._Telefonski_Broj;
			}
			set
			{
				if ((this._Telefonski_Broj != value))
				{
					this.OnTelefonski_BrojChanging(value);
					this.SendPropertyChanging();
					this._Telefonski_Broj = value;
					this.SendPropertyChanged("Telefonski_Broj");
					this.OnTelefonski_BrojChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Administrator", DbType="Bit NOT NULL")]
		public bool Administrator
		{
			get
			{
				return this._Administrator;
			}
			set
			{
				if ((this._Administrator != value))
				{
					this.OnAdministratorChanging(value);
					this.SendPropertyChanging();
					this._Administrator = value;
					this.SendPropertyChanged("Administrator");
					this.OnAdministratorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student", DbType="Bit NOT NULL")]
		public bool Student
		{
			get
			{
				return this._Student;
			}
			set
			{
				if ((this._Student != value))
				{
					this.OnStudentChanging(value);
					this.SendPropertyChanging();
					this._Student = value;
					this.SendPropertyChanged("Student");
					this.OnStudentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mentor", DbType="Bit NOT NULL")]
		public bool Mentor
		{
			get
			{
				return this._Mentor;
			}
			set
			{
				if ((this._Mentor != value))
				{
					this.OnMentorChanging(value);
					this.SendPropertyChanging();
					this._Mentor = value;
					this.SendPropertyChanged("Mentor");
					this.OnMentorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Korisnik_Ocenka", Storage="_Ocenkas", ThisKey="ID", OtherKey="Korisnik_ID")]
		public EntitySet<Ocenka> Ocenkas
		{
			get
			{
				return this._Ocenkas;
			}
			set
			{
				this._Ocenkas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Korisnik_Prijava_Korisnik", Storage="_Prijava_Korisniks", ThisKey="ID", OtherKey="Korisnik_ID")]
		public EntitySet<Prijava_Korisnik> Prijava_Korisniks
		{
			get
			{
				return this._Prijava_Korisniks;
			}
			set
			{
				this._Prijava_Korisniks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organizacija_Korisnik", Storage="_Organizacija", ThisKey="Organizacija_ID", OtherKey="ID", IsForeignKey=true)]
		public Organizacija Organizacija
		{
			get
			{
				return this._Organizacija.Entity;
			}
			set
			{
				Organizacija previousValue = this._Organizacija.Entity;
				if (((previousValue != value) 
							|| (this._Organizacija.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organizacija.Entity = null;
						previousValue.Korisniks.Remove(this);
					}
					this._Organizacija.Entity = value;
					if ((value != null))
					{
						value.Korisniks.Add(this);
						this._Organizacija_ID = value.ID;
					}
					else
					{
						this._Organizacija_ID = default(int);
					}
					this.SendPropertyChanged("Organizacija");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Studiska_Programa_Korisnik", Storage="_Studiska_Programa", ThisKey="Studiska_Programa_ID", OtherKey="ID", IsForeignKey=true)]
		public Studiska_Programa Studiska_Programa
		{
			get
			{
				return this._Studiska_Programa.Entity;
			}
			set
			{
				Studiska_Programa previousValue = this._Studiska_Programa.Entity;
				if (((previousValue != value) 
							|| (this._Studiska_Programa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Studiska_Programa.Entity = null;
						previousValue.Korisniks.Remove(this);
					}
					this._Studiska_Programa.Entity = value;
					if ((value != null))
					{
						value.Korisniks.Add(this);
						this._Studiska_Programa_ID = value.ID;
					}
					else
					{
						this._Studiska_Programa_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Studiska_Programa");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ocenkas(Ocenka entity)
		{
			this.SendPropertyChanging();
			entity.Korisnik = this;
		}
		
		private void detach_Ocenkas(Ocenka entity)
		{
			this.SendPropertyChanging();
			entity.Korisnik = null;
		}
		
		private void attach_Prijava_Korisniks(Prijava_Korisnik entity)
		{
			this.SendPropertyChanging();
			entity.Korisnik = this;
		}
		
		private void detach_Prijava_Korisniks(Prijava_Korisnik entity)
		{
			this.SendPropertyChanging();
			entity.Korisnik = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vid_Organizacija")]
	public partial class Vid_Organizacija : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Ime;
		
		private EntitySet<Organizacija> _Organizacijas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnImeChanging(string value);
    partial void OnImeChanged();
    #endregion
		
		public Vid_Organizacija()
		{
			this._Organizacijas = new EntitySet<Organizacija>(new Action<Organizacija>(this.attach_Organizacijas), new Action<Organizacija>(this.detach_Organizacijas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ime", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Ime
		{
			get
			{
				return this._Ime;
			}
			set
			{
				if ((this._Ime != value))
				{
					this.OnImeChanging(value);
					this.SendPropertyChanging();
					this._Ime = value;
					this.SendPropertyChanged("Ime");
					this.OnImeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vid_Organizacija_Organizacija", Storage="_Organizacijas", ThisKey="ID", OtherKey="Vid_Organizacija_ID")]
		public EntitySet<Organizacija> Organizacijas
		{
			get
			{
				return this._Organizacijas;
			}
			set
			{
				this._Organizacijas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Organizacijas(Organizacija entity)
		{
			this.SendPropertyChanging();
			entity.Vid_Organizacija = this;
		}
		
		private void detach_Organizacijas(Organizacija entity)
		{
			this.SendPropertyChanging();
			entity.Vid_Organizacija = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Oblast")]
	public partial class Oblast : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Ime;
		
		private EntitySet<Tehnologija> _Tehnologijas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnImeChanging(string value);
    partial void OnImeChanged();
    #endregion
		
		public Oblast()
		{
			this._Tehnologijas = new EntitySet<Tehnologija>(new Action<Tehnologija>(this.attach_Tehnologijas), new Action<Tehnologija>(this.detach_Tehnologijas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ime", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Ime
		{
			get
			{
				return this._Ime;
			}
			set
			{
				if ((this._Ime != value))
				{
					this.OnImeChanging(value);
					this.SendPropertyChanging();
					this._Ime = value;
					this.SendPropertyChanged("Ime");
					this.OnImeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Oblast_Tehnologija", Storage="_Tehnologijas", ThisKey="ID", OtherKey="Oblast_ID")]
		public EntitySet<Tehnologija> Tehnologijas
		{
			get
			{
				return this._Tehnologijas;
			}
			set
			{
				this._Tehnologijas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tehnologijas(Tehnologija entity)
		{
			this.SendPropertyChanging();
			entity.Oblast = this;
		}
		
		private void detach_Tehnologijas(Tehnologija entity)
		{
			this.SendPropertyChanging();
			entity.Oblast = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ocenka")]
	public partial class Ocenka : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Korisnik_ID;
		
		private int _Predmet_ID;
		
		private int _Ocenka1;
		
		private EntityRef<Korisnik> _Korisnik;
		
		private EntityRef<Predmet> _Predmet;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKorisnik_IDChanging(int value);
    partial void OnKorisnik_IDChanged();
    partial void OnPredmet_IDChanging(int value);
    partial void OnPredmet_IDChanged();
    partial void OnOcenka1Changing(int value);
    partial void OnOcenka1Changed();
    #endregion
		
		public Ocenka()
		{
			this._Korisnik = default(EntityRef<Korisnik>);
			this._Predmet = default(EntityRef<Predmet>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Korisnik_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Korisnik_ID
		{
			get
			{
				return this._Korisnik_ID;
			}
			set
			{
				if ((this._Korisnik_ID != value))
				{
					if (this._Korisnik.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKorisnik_IDChanging(value);
					this.SendPropertyChanging();
					this._Korisnik_ID = value;
					this.SendPropertyChanged("Korisnik_ID");
					this.OnKorisnik_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Predmet_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Predmet_ID
		{
			get
			{
				return this._Predmet_ID;
			}
			set
			{
				if ((this._Predmet_ID != value))
				{
					if (this._Predmet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPredmet_IDChanging(value);
					this.SendPropertyChanging();
					this._Predmet_ID = value;
					this.SendPropertyChanged("Predmet_ID");
					this.OnPredmet_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Ocenka", Storage="_Ocenka1", DbType="Int NOT NULL")]
		public int Ocenka1
		{
			get
			{
				return this._Ocenka1;
			}
			set
			{
				if ((this._Ocenka1 != value))
				{
					this.OnOcenka1Changing(value);
					this.SendPropertyChanging();
					this._Ocenka1 = value;
					this.SendPropertyChanged("Ocenka1");
					this.OnOcenka1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Korisnik_Ocenka", Storage="_Korisnik", ThisKey="Korisnik_ID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Korisnik Korisnik
		{
			get
			{
				return this._Korisnik.Entity;
			}
			set
			{
				Korisnik previousValue = this._Korisnik.Entity;
				if (((previousValue != value) 
							|| (this._Korisnik.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Korisnik.Entity = null;
						previousValue.Ocenkas.Remove(this);
					}
					this._Korisnik.Entity = value;
					if ((value != null))
					{
						value.Ocenkas.Add(this);
						this._Korisnik_ID = value.ID;
					}
					else
					{
						this._Korisnik_ID = default(int);
					}
					this.SendPropertyChanged("Korisnik");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Predmet_Ocenka", Storage="_Predmet", ThisKey="Predmet_ID", OtherKey="ID", IsForeignKey=true)]
		public Predmet Predmet
		{
			get
			{
				return this._Predmet.Entity;
			}
			set
			{
				Predmet previousValue = this._Predmet.Entity;
				if (((previousValue != value) 
							|| (this._Predmet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Predmet.Entity = null;
						previousValue.Ocenkas.Remove(this);
					}
					this._Predmet.Entity = value;
					if ((value != null))
					{
						value.Ocenkas.Add(this);
						this._Predmet_ID = value.ID;
					}
					else
					{
						this._Predmet_ID = default(int);
					}
					this.SendPropertyChanged("Predmet");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Organizacija")]
	public partial class Organizacija : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Ime;
		
		private string _Adresa;
		
		private string _Kontakt_Telefon;
		
		private string _Veb_Strana;
		
		private int _Vid_Organizacija_ID;
		
		private EntitySet<Korisnik> _Korisniks;
		
		private EntitySet<Prijava> _Prijavas;
		
		private EntityRef<Vid_Organizacija> _Vid_Organizacija;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnImeChanging(string value);
    partial void OnImeChanged();
    partial void OnAdresaChanging(string value);
    partial void OnAdresaChanged();
    partial void OnKontakt_TelefonChanging(string value);
    partial void OnKontakt_TelefonChanged();
    partial void OnVeb_StranaChanging(string value);
    partial void OnVeb_StranaChanged();
    partial void OnVid_Organizacija_IDChanging(int value);
    partial void OnVid_Organizacija_IDChanged();
    #endregion
		
		public Organizacija()
		{
			this._Korisniks = new EntitySet<Korisnik>(new Action<Korisnik>(this.attach_Korisniks), new Action<Korisnik>(this.detach_Korisniks));
			this._Prijavas = new EntitySet<Prijava>(new Action<Prijava>(this.attach_Prijavas), new Action<Prijava>(this.detach_Prijavas));
			this._Vid_Organizacija = default(EntityRef<Vid_Organizacija>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ime", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Ime
		{
			get
			{
				return this._Ime;
			}
			set
			{
				if ((this._Ime != value))
				{
					this.OnImeChanging(value);
					this.SendPropertyChanging();
					this._Ime = value;
					this.SendPropertyChanged("Ime");
					this.OnImeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adresa", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Adresa
		{
			get
			{
				return this._Adresa;
			}
			set
			{
				if ((this._Adresa != value))
				{
					this.OnAdresaChanging(value);
					this.SendPropertyChanging();
					this._Adresa = value;
					this.SendPropertyChanged("Adresa");
					this.OnAdresaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kontakt_Telefon", DbType="NVarChar(16)")]
		public string Kontakt_Telefon
		{
			get
			{
				return this._Kontakt_Telefon;
			}
			set
			{
				if ((this._Kontakt_Telefon != value))
				{
					this.OnKontakt_TelefonChanging(value);
					this.SendPropertyChanging();
					this._Kontakt_Telefon = value;
					this.SendPropertyChanged("Kontakt_Telefon");
					this.OnKontakt_TelefonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Veb_Strana", DbType="NVarChar(50)")]
		public string Veb_Strana
		{
			get
			{
				return this._Veb_Strana;
			}
			set
			{
				if ((this._Veb_Strana != value))
				{
					this.OnVeb_StranaChanging(value);
					this.SendPropertyChanging();
					this._Veb_Strana = value;
					this.SendPropertyChanged("Veb_Strana");
					this.OnVeb_StranaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vid_Organizacija_ID", DbType="Int NOT NULL")]
		public int Vid_Organizacija_ID
		{
			get
			{
				return this._Vid_Organizacija_ID;
			}
			set
			{
				if ((this._Vid_Organizacija_ID != value))
				{
					if (this._Vid_Organizacija.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVid_Organizacija_IDChanging(value);
					this.SendPropertyChanging();
					this._Vid_Organizacija_ID = value;
					this.SendPropertyChanged("Vid_Organizacija_ID");
					this.OnVid_Organizacija_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organizacija_Korisnik", Storage="_Korisniks", ThisKey="ID", OtherKey="Organizacija_ID")]
		public EntitySet<Korisnik> Korisniks
		{
			get
			{
				return this._Korisniks;
			}
			set
			{
				this._Korisniks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organizacija_Prijava", Storage="_Prijavas", ThisKey="ID", OtherKey="Organizacija_ID")]
		public EntitySet<Prijava> Prijavas
		{
			get
			{
				return this._Prijavas;
			}
			set
			{
				this._Prijavas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vid_Organizacija_Organizacija", Storage="_Vid_Organizacija", ThisKey="Vid_Organizacija_ID", OtherKey="ID", IsForeignKey=true)]
		public Vid_Organizacija Vid_Organizacija
		{
			get
			{
				return this._Vid_Organizacija.Entity;
			}
			set
			{
				Vid_Organizacija previousValue = this._Vid_Organizacija.Entity;
				if (((previousValue != value) 
							|| (this._Vid_Organizacija.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vid_Organizacija.Entity = null;
						previousValue.Organizacijas.Remove(this);
					}
					this._Vid_Organizacija.Entity = value;
					if ((value != null))
					{
						value.Organizacijas.Add(this);
						this._Vid_Organizacija_ID = value.ID;
					}
					else
					{
						this._Vid_Organizacija_ID = default(int);
					}
					this.SendPropertyChanged("Vid_Organizacija");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Korisniks(Korisnik entity)
		{
			this.SendPropertyChanging();
			entity.Organizacija = this;
		}
		
		private void detach_Korisniks(Korisnik entity)
		{
			this.SendPropertyChanging();
			entity.Organizacija = null;
		}
		
		private void attach_Prijavas(Prijava entity)
		{
			this.SendPropertyChanging();
			entity.Organizacija = this;
		}
		
		private void detach_Prijavas(Prijava entity)
		{
			this.SendPropertyChanging();
			entity.Organizacija = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Predmet")]
	public partial class Predmet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Shifra_Na_Predmet;
		
		private string _Ime;
		
		private EntitySet<Ocenka> _Ocenkas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnShifra_Na_PredmetChanging(string value);
    partial void OnShifra_Na_PredmetChanged();
    partial void OnImeChanging(string value);
    partial void OnImeChanged();
    #endregion
		
		public Predmet()
		{
			this._Ocenkas = new EntitySet<Ocenka>(new Action<Ocenka>(this.attach_Ocenkas), new Action<Ocenka>(this.detach_Ocenkas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shifra_Na_Predmet", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Shifra_Na_Predmet
		{
			get
			{
				return this._Shifra_Na_Predmet;
			}
			set
			{
				if ((this._Shifra_Na_Predmet != value))
				{
					this.OnShifra_Na_PredmetChanging(value);
					this.SendPropertyChanging();
					this._Shifra_Na_Predmet = value;
					this.SendPropertyChanged("Shifra_Na_Predmet");
					this.OnShifra_Na_PredmetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ime", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Ime
		{
			get
			{
				return this._Ime;
			}
			set
			{
				if ((this._Ime != value))
				{
					this.OnImeChanging(value);
					this.SendPropertyChanging();
					this._Ime = value;
					this.SendPropertyChanged("Ime");
					this.OnImeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Predmet_Ocenka", Storage="_Ocenkas", ThisKey="ID", OtherKey="Predmet_ID")]
		public EntitySet<Ocenka> Ocenkas
		{
			get
			{
				return this._Ocenkas;
			}
			set
			{
				this._Ocenkas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ocenkas(Ocenka entity)
		{
			this.SendPropertyChanging();
			entity.Predmet = this;
		}
		
		private void detach_Ocenkas(Ocenka entity)
		{
			this.SendPropertyChanging();
			entity.Predmet = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Prijava")]
	public partial class Prijava : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Organizacija_ID;
		
		private System.DateTime _Datum_Na_Prijavuvanje;
		
		private EntitySet<Prijava_Korisnik> _Prijava_Korisniks;
		
		private EntitySet<Prijava_Tehnologija> _Prijava_Tehnologijas;
		
		private EntityRef<Organizacija> _Organizacija;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnOrganizacija_IDChanging(int value);
    partial void OnOrganizacija_IDChanged();
    partial void OnDatum_Na_PrijavuvanjeChanging(System.DateTime value);
    partial void OnDatum_Na_PrijavuvanjeChanged();
    #endregion
		
		public Prijava()
		{
			this._Prijava_Korisniks = new EntitySet<Prijava_Korisnik>(new Action<Prijava_Korisnik>(this.attach_Prijava_Korisniks), new Action<Prijava_Korisnik>(this.detach_Prijava_Korisniks));
			this._Prijava_Tehnologijas = new EntitySet<Prijava_Tehnologija>(new Action<Prijava_Tehnologija>(this.attach_Prijava_Tehnologijas), new Action<Prijava_Tehnologija>(this.detach_Prijava_Tehnologijas));
			this._Organizacija = default(EntityRef<Organizacija>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Organizacija_ID", DbType="Int NOT NULL")]
		public int Organizacija_ID
		{
			get
			{
				return this._Organizacija_ID;
			}
			set
			{
				if ((this._Organizacija_ID != value))
				{
					if (this._Organizacija.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrganizacija_IDChanging(value);
					this.SendPropertyChanging();
					this._Organizacija_ID = value;
					this.SendPropertyChanged("Organizacija_ID");
					this.OnOrganizacija_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Datum_Na_Prijavuvanje", DbType="DateTime NOT NULL")]
		public System.DateTime Datum_Na_Prijavuvanje
		{
			get
			{
				return this._Datum_Na_Prijavuvanje;
			}
			set
			{
				if ((this._Datum_Na_Prijavuvanje != value))
				{
					this.OnDatum_Na_PrijavuvanjeChanging(value);
					this.SendPropertyChanging();
					this._Datum_Na_Prijavuvanje = value;
					this.SendPropertyChanged("Datum_Na_Prijavuvanje");
					this.OnDatum_Na_PrijavuvanjeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prijava_Prijava_Korisnik", Storage="_Prijava_Korisniks", ThisKey="ID", OtherKey="Prijava_ID")]
		public EntitySet<Prijava_Korisnik> Prijava_Korisniks
		{
			get
			{
				return this._Prijava_Korisniks;
			}
			set
			{
				this._Prijava_Korisniks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prijava_Prijava_Tehnologija", Storage="_Prijava_Tehnologijas", ThisKey="ID", OtherKey="Prijava_ID")]
		public EntitySet<Prijava_Tehnologija> Prijava_Tehnologijas
		{
			get
			{
				return this._Prijava_Tehnologijas;
			}
			set
			{
				this._Prijava_Tehnologijas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organizacija_Prijava", Storage="_Organizacija", ThisKey="Organizacija_ID", OtherKey="ID", IsForeignKey=true)]
		public Organizacija Organizacija
		{
			get
			{
				return this._Organizacija.Entity;
			}
			set
			{
				Organizacija previousValue = this._Organizacija.Entity;
				if (((previousValue != value) 
							|| (this._Organizacija.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organizacija.Entity = null;
						previousValue.Prijavas.Remove(this);
					}
					this._Organizacija.Entity = value;
					if ((value != null))
					{
						value.Prijavas.Add(this);
						this._Organizacija_ID = value.ID;
					}
					else
					{
						this._Organizacija_ID = default(int);
					}
					this.SendPropertyChanged("Organizacija");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Prijava_Korisniks(Prijava_Korisnik entity)
		{
			this.SendPropertyChanging();
			entity.Prijava = this;
		}
		
		private void detach_Prijava_Korisniks(Prijava_Korisnik entity)
		{
			this.SendPropertyChanging();
			entity.Prijava = null;
		}
		
		private void attach_Prijava_Tehnologijas(Prijava_Tehnologija entity)
		{
			this.SendPropertyChanging();
			entity.Prijava = this;
		}
		
		private void detach_Prijava_Tehnologijas(Prijava_Tehnologija entity)
		{
			this.SendPropertyChanging();
			entity.Prijava = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Prijava_Korisnik")]
	public partial class Prijava_Korisnik : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Prijava_ID;
		
		private int _Korisnik_ID;
		
		private EntityRef<Korisnik> _Korisnik;
		
		private EntityRef<Prijava> _Prijava;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPrijava_IDChanging(int value);
    partial void OnPrijava_IDChanged();
    partial void OnKorisnik_IDChanging(int value);
    partial void OnKorisnik_IDChanged();
    #endregion
		
		public Prijava_Korisnik()
		{
			this._Korisnik = default(EntityRef<Korisnik>);
			this._Prijava = default(EntityRef<Prijava>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prijava_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Prijava_ID
		{
			get
			{
				return this._Prijava_ID;
			}
			set
			{
				if ((this._Prijava_ID != value))
				{
					if (this._Prijava.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPrijava_IDChanging(value);
					this.SendPropertyChanging();
					this._Prijava_ID = value;
					this.SendPropertyChanged("Prijava_ID");
					this.OnPrijava_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Korisnik_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Korisnik_ID
		{
			get
			{
				return this._Korisnik_ID;
			}
			set
			{
				if ((this._Korisnik_ID != value))
				{
					if (this._Korisnik.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKorisnik_IDChanging(value);
					this.SendPropertyChanging();
					this._Korisnik_ID = value;
					this.SendPropertyChanged("Korisnik_ID");
					this.OnKorisnik_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Korisnik_Prijava_Korisnik", Storage="_Korisnik", ThisKey="Korisnik_ID", OtherKey="ID", IsForeignKey=true)]
		public Korisnik Korisnik
		{
			get
			{
				return this._Korisnik.Entity;
			}
			set
			{
				Korisnik previousValue = this._Korisnik.Entity;
				if (((previousValue != value) 
							|| (this._Korisnik.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Korisnik.Entity = null;
						previousValue.Prijava_Korisniks.Remove(this);
					}
					this._Korisnik.Entity = value;
					if ((value != null))
					{
						value.Prijava_Korisniks.Add(this);
						this._Korisnik_ID = value.ID;
					}
					else
					{
						this._Korisnik_ID = default(int);
					}
					this.SendPropertyChanged("Korisnik");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prijava_Prijava_Korisnik", Storage="_Prijava", ThisKey="Prijava_ID", OtherKey="ID", IsForeignKey=true)]
		public Prijava Prijava
		{
			get
			{
				return this._Prijava.Entity;
			}
			set
			{
				Prijava previousValue = this._Prijava.Entity;
				if (((previousValue != value) 
							|| (this._Prijava.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Prijava.Entity = null;
						previousValue.Prijava_Korisniks.Remove(this);
					}
					this._Prijava.Entity = value;
					if ((value != null))
					{
						value.Prijava_Korisniks.Add(this);
						this._Prijava_ID = value.ID;
					}
					else
					{
						this._Prijava_ID = default(int);
					}
					this.SendPropertyChanged("Prijava");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Prijava_Tehnologija")]
	public partial class Prijava_Tehnologija : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Prijava_ID;
		
		private int _Tehnologija_ID;
		
		private EntityRef<Prijava> _Prijava;
		
		private EntityRef<Tehnologija> _Tehnologija;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPrijava_IDChanging(int value);
    partial void OnPrijava_IDChanged();
    partial void OnTehnologija_IDChanging(int value);
    partial void OnTehnologija_IDChanged();
    #endregion
		
		public Prijava_Tehnologija()
		{
			this._Prijava = default(EntityRef<Prijava>);
			this._Tehnologija = default(EntityRef<Tehnologija>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prijava_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Prijava_ID
		{
			get
			{
				return this._Prijava_ID;
			}
			set
			{
				if ((this._Prijava_ID != value))
				{
					if (this._Prijava.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPrijava_IDChanging(value);
					this.SendPropertyChanging();
					this._Prijava_ID = value;
					this.SendPropertyChanged("Prijava_ID");
					this.OnPrijava_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tehnologija_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Tehnologija_ID
		{
			get
			{
				return this._Tehnologija_ID;
			}
			set
			{
				if ((this._Tehnologija_ID != value))
				{
					if (this._Tehnologija.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTehnologija_IDChanging(value);
					this.SendPropertyChanging();
					this._Tehnologija_ID = value;
					this.SendPropertyChanged("Tehnologija_ID");
					this.OnTehnologija_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prijava_Prijava_Tehnologija", Storage="_Prijava", ThisKey="Prijava_ID", OtherKey="ID", IsForeignKey=true)]
		public Prijava Prijava
		{
			get
			{
				return this._Prijava.Entity;
			}
			set
			{
				Prijava previousValue = this._Prijava.Entity;
				if (((previousValue != value) 
							|| (this._Prijava.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Prijava.Entity = null;
						previousValue.Prijava_Tehnologijas.Remove(this);
					}
					this._Prijava.Entity = value;
					if ((value != null))
					{
						value.Prijava_Tehnologijas.Add(this);
						this._Prijava_ID = value.ID;
					}
					else
					{
						this._Prijava_ID = default(int);
					}
					this.SendPropertyChanged("Prijava");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tehnologija_Prijava_Tehnologija", Storage="_Tehnologija", ThisKey="Tehnologija_ID", OtherKey="ID", IsForeignKey=true)]
		public Tehnologija Tehnologija
		{
			get
			{
				return this._Tehnologija.Entity;
			}
			set
			{
				Tehnologija previousValue = this._Tehnologija.Entity;
				if (((previousValue != value) 
							|| (this._Tehnologija.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tehnologija.Entity = null;
						previousValue.Prijava_Tehnologijas.Remove(this);
					}
					this._Tehnologija.Entity = value;
					if ((value != null))
					{
						value.Prijava_Tehnologijas.Add(this);
						this._Tehnologija_ID = value.ID;
					}
					else
					{
						this._Tehnologija_ID = default(int);
					}
					this.SendPropertyChanged("Tehnologija");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Studiska_Programa")]
	public partial class Studiska_Programa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Ime;
		
		private EntitySet<Korisnik> _Korisniks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnImeChanging(string value);
    partial void OnImeChanged();
    #endregion
		
		public Studiska_Programa()
		{
			this._Korisniks = new EntitySet<Korisnik>(new Action<Korisnik>(this.attach_Korisniks), new Action<Korisnik>(this.detach_Korisniks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ime", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Ime
		{
			get
			{
				return this._Ime;
			}
			set
			{
				if ((this._Ime != value))
				{
					this.OnImeChanging(value);
					this.SendPropertyChanging();
					this._Ime = value;
					this.SendPropertyChanged("Ime");
					this.OnImeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Studiska_Programa_Korisnik", Storage="_Korisniks", ThisKey="ID", OtherKey="Studiska_Programa_ID")]
		public EntitySet<Korisnik> Korisniks
		{
			get
			{
				return this._Korisniks;
			}
			set
			{
				this._Korisniks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Korisniks(Korisnik entity)
		{
			this.SendPropertyChanging();
			entity.Studiska_Programa = this;
		}
		
		private void detach_Korisniks(Korisnik entity)
		{
			this.SendPropertyChanging();
			entity.Studiska_Programa = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tehnologija")]
	public partial class Tehnologija : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Ime;
		
		private int _Oblast_ID;
		
		private EntitySet<Prijava_Tehnologija> _Prijava_Tehnologijas;
		
		private EntityRef<Oblast> _Oblast;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnImeChanging(string value);
    partial void OnImeChanged();
    partial void OnOblast_IDChanging(int value);
    partial void OnOblast_IDChanged();
    #endregion
		
		public Tehnologija()
		{
			this._Prijava_Tehnologijas = new EntitySet<Prijava_Tehnologija>(new Action<Prijava_Tehnologija>(this.attach_Prijava_Tehnologijas), new Action<Prijava_Tehnologija>(this.detach_Prijava_Tehnologijas));
			this._Oblast = default(EntityRef<Oblast>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ime", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Ime
		{
			get
			{
				return this._Ime;
			}
			set
			{
				if ((this._Ime != value))
				{
					this.OnImeChanging(value);
					this.SendPropertyChanging();
					this._Ime = value;
					this.SendPropertyChanged("Ime");
					this.OnImeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Oblast_ID", DbType="Int NOT NULL")]
		public int Oblast_ID
		{
			get
			{
				return this._Oblast_ID;
			}
			set
			{
				if ((this._Oblast_ID != value))
				{
					if (this._Oblast.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOblast_IDChanging(value);
					this.SendPropertyChanging();
					this._Oblast_ID = value;
					this.SendPropertyChanged("Oblast_ID");
					this.OnOblast_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tehnologija_Prijava_Tehnologija", Storage="_Prijava_Tehnologijas", ThisKey="ID", OtherKey="Tehnologija_ID")]
		public EntitySet<Prijava_Tehnologija> Prijava_Tehnologijas
		{
			get
			{
				return this._Prijava_Tehnologijas;
			}
			set
			{
				this._Prijava_Tehnologijas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Oblast_Tehnologija", Storage="_Oblast", ThisKey="Oblast_ID", OtherKey="ID", IsForeignKey=true)]
		public Oblast Oblast
		{
			get
			{
				return this._Oblast.Entity;
			}
			set
			{
				Oblast previousValue = this._Oblast.Entity;
				if (((previousValue != value) 
							|| (this._Oblast.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Oblast.Entity = null;
						previousValue.Tehnologijas.Remove(this);
					}
					this._Oblast.Entity = value;
					if ((value != null))
					{
						value.Tehnologijas.Add(this);
						this._Oblast_ID = value.ID;
					}
					else
					{
						this._Oblast_ID = default(int);
					}
					this.SendPropertyChanged("Oblast");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Prijava_Tehnologijas(Prijava_Tehnologija entity)
		{
			this.SendPropertyChanging();
			entity.Tehnologija = this;
		}
		
		private void detach_Prijava_Tehnologijas(Prijava_Tehnologija entity)
		{
			this.SendPropertyChanging();
			entity.Tehnologija = null;
		}
	}
}
#pragma warning restore 1591
